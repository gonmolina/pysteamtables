name: Build PySteamTables
on:
  push:
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'MANIFEST.in'
      - 'README.rst'
      - 'LICENSE'

jobs:

  build-setup:
    # Super fast sniff build. If this fails, don't start the other jobs
    name: Build sdist on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout freesteamtable
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup Ubuntu
        run: |
          sudo apt-get -y install cmake --fix-missing
          sudo apt-get -y install libgsl-dev 
          pip install scikit-build pytest
      - name: Create PySteamTables sdist
        run: python setup.py sdist

      - name: Install PySteamTables sdist
        run: |
          mkdir cleancwd
          cd cleancwd
          tar xfz ../dist/pysteamtables-*.tar.gz
          cd pysteamtables-*
          python setup.py install
      - name: Run tests
        run: pytest

  build-pip:
    name: Build pip Py${{ matrix.python }}, ${{ matrix.os }}, ${{ matrix.bla_vendor}}
    runs-on: ${{ matrix.os }}-latest
    needs: build-setup
    strategy:
        fail-fast: false
        matrix:
            os:
              - 'ubuntu'
              - 'macos'
            python:
              - '3.7'
              - '3.9'
              - '3.10'
            include:
              - os: 'ubuntu'
                python: '3.9'
              - os: 'ubuntu'
                python: '3.9'
              - os: 'macos'
                python: '3.9'
              - os: 'macos'
                python: '3.9'
              - os: 'macos'
                python: '3.9'

    steps:
      - name: Checkout PySteamTables
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Setup Ubuntu
        if: matrix.os == 'ubuntu'
        run: |
          sudo apt-get -y update
          sudo apt-get -y install cmake --fix-missing
          sudo apt-get -y install libgsl-dev
      - name: Setup macOS
        if: matrix.os == 'macos'
        run: |
              brew install gsl
      - name: Build wheel
        env:
          CMAKE_GENERATOR: Unix Makefiles
        run: |
          python -m pip install --upgrade pip
          pip wheel -v -w . .
          wheeldir=pysteamtables-wheels/${{ matrix.os }}-${{ matrix.python }}
          mkdir -p ${wheeldir}
          cp ./pystetamtables*.whl ${wheeldir}/
      - name: Save wheel
        uses: actions/upload-artifact@v2
        with:
          name: pysteamtables-wheels
          path: pysteamtables-wheels

  build-conda:
    name: Build conda Py${{ matrix.python }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    needs: build-setup
    strategy:
        fail-fast: false
        matrix:
          os:
            - 'ubuntu'
            - 'macos'
            - 'windows'
          python:
            - '3.9'
            - '3.10'

    steps:
      - name: Checkout PySteamTables
        uses: actions/checkout@v2

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python }}
          activate-environment: build-env
          channels: conda-forge
          channel-priority: strict
          auto-update-conda: false
          auto-activate-base: false
      - name: Conda build
        shell: bash -l {0}
        run: |
          set -e
          conda install conda-build conda-verify
          conda-build --python "${{ matrix.python }}"
          find "${CONDA_PREFIX}/conda-bld" -maxdepth 2 -name 'pysteamtable*.tar.bz2' | while read -r conda_pkg; do
            conda_platform=$(basename $(dirname "${conda_pkg}"))
            mkdir -p "pysteamtable-conda-pkgs/${conda_platform}"
            cp "${conda_pkg}" "pysteamtable-conda-pkgs/${conda_platform}/"
          done
      - name: Save to local conda pkg channel
        uses: actions/upload-artifact@v2
        with:
          name: pysteamtables-conda-pkgs
          path: pysteamtables-conda-pkgs

  create-wheel-test-matrix:
    name: Create wheel test matrix
    runs-on: ubuntu-latest
    needs: build-pip
    if: always()  # run tests for all successful builds, even if others failed
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout PySteamTables
        uses: actions/checkout@v2
      - name: Download wheels (if any)
        uses: actions/download-artifact@v2
        with:
          name: pysteamtables-wheels
          path: pysteamtables-wheels
      - id: set-matrix
        run: |
          matrix=$(python3 .github/scripts/set-pip-test-matrix.py)
          echo "::set-output name=matrix::$matrix"
  
  
  create-conda-test-matrix:
    name: Create conda test matrix
    runs-on: ubuntu-latest
    needs: build-conda
    if: always()  # run tests for all successful builds, even if others failed
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout PySteamTables
        uses: actions/checkout@v2
      - name: Download conda packages
        uses: actions/download-artifact@v2
        with:
          name: pysteamtables-conda-pkgs
          path: pysteamtables-conda-pkgs
      - id: set-matrix
        run: |
          matrix=$(python3 .github/scripts/set-conda-test-matrix.py)
          echo "::set-output name=matrix::$matrix"
    
  test-wheel:
    name: Test wheel ${{ matrix.packagekey }}, ${{ matrix.failok }}
    needs: create-wheel-test-matrix
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.failok == 'FAILOK' }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.create-wheel-test-matrix.outputs.matrix) }}

    steps:
      - name: Checkout Pysteamtables
        uses: actions/checkout@v2
        with:
          path: pysteamtables-src
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Setup Ubuntu
        if: matrix.os == 'ubuntu'
        run: |
          set -xe
          sudo apt-get -y update
          sudo apt-get -y install libgsl-dev
      - name: Setup macOS
        if: matrix.os == 'macos'
        run: |
          set -xe
          brew install coreutils
          brew install libgsl-dev
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          name: pysteamtables-wheels
          path: pysteamtables-wheels
      - name: Install Wheel
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-timeout coverage coveralls
          pip install pysteamtables-wheels/${{ matrix.packagekey }}/pysteamtables*.whl
          pip show pysteamtables
      - name: Pysteamtables tests
        run: bash pysteamtables-src/.github/scripts/run-tests.sh
      - name: report coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: wheel-${{ matrix.packagekey }}
          COVERALLS_PARALLEL: true
        working-directory: pysteamtables-src
        run: coveralls --service=github

  test-conda:
    name: Test conda ${{ matrix.packagekey }}
    needs: create-conda-test-matrix
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.failok == 'FAILOK' }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.create-conda-test-matrix.outputs.matrix) }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout Pysteamtables
        uses: actions/checkout@v2
        with:
          path: pysteamtables-src
      - name: Setup macOS
        if: matrix.os == 'macos'
        run: brew install coreutils
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python }}
          activate-environment: test-env
          environment-file: pysteamtables-src/.github/conda-env/test-env.yml
          channels: conda-forge
          channel-priority: strict
          auto-activate-base: false
      - name: Download conda packages
        uses: actions/download-artifact@v2
        with:
          name: pysteamtables-conda-pkgs
          path: pysteamtables-conda-pkgs
      - name: Install Conda package
        run: |
          set -e
          esac
          conda index --no-progress ./pysteamtables-conda-pkgs
          conda install -c ./pysteamtables-conda-pkgs pysteamtables
          conda list
      - name: Pysteamtables tests
        run: bash pysteamtables-src/.github/scripts/run-tests.sh
      - name: Report coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: conda-${{ matrix.packagekey }}
          COVERALLS_PARALLEL: true
        working-directory: pysteamtables-src
        # https://github.com/TheKevJames/coveralls-python/issues/252
        run: coveralls --service=github

  coveralls-final:
    name: Finalize parallel coveralls
    if: always()
    needs:
      - test-conda
      - test-wheel
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
